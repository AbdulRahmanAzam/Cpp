// https://www.geeksforgeeks.org/problems/the-celebrity-problem/1?

// BRUTE FORCE APPROACH
    // //Function to find if there is a celebrity in the party or not.
    // int celebrity(vector<vector<int> >& M, int n) 
    // {
    //     for (int i = 0; i < n; i++) {
    //         bool isCelebrity = true;
            
    //         for (int j = 0; j < n; j++) {
    //             // Check if the current person 'i' knows anyone, or someone doesn't know 'i'
    //             if (i != j && (knows(M,i,j) || !knows(M,j,i))) {
    //                 isCelebrity = false;
    //                 break;
    //             }
    //         }
    //         if (isCelebrity) {
    //             return i;  // Person 'i' is a celebrity
    //         }
    //     }
    //     return -1;  // No celebrity found
    // }

    bool knows(vector<vector<int>> &M, int a, int b){
        return M[a][b] == 1;
    }
    
    int celebrity(vector<vector<int> >& M, int n) {
        stack<int> s;
        
        // step1: put all elements in stack
        for(int i=0; i<n;i++){
            s.push(i);
        }
        
        // step2: get 2 elements and compare them
        while(s.size() > 1){
            int a = s.top();
            s.pop();
            
            int b = s.top();
            s.pop();
            
            if(knows(M,a,b)){
                s.push(b);
            }else{
                s.push(a);
            }
        }
        
        int candidate = s.top();
        // step3: single element is stack is potentiall celeb
        bool rowCheck = false;
        int zeroCount = 0;
        
        for(int i=0;i <n ;i++)
            if(M[candidate][i] == 0)
                zeroCount++;
        
        // all zeros
        if(zeroCount == n)
            rowCheck = true;
        
        bool colCheck = false;
        int oneCount = 0;
        for(int i=0;i <n ;i++)
            if(M[i][candidate] == 1)
                oneCount++;
                
        if(oneCount == n-1)
            colCheck = true;
            
        if(colCheck && rowCheck)
            return candidate;
        else 
            return -1;
    }
